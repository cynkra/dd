% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/duckdb-funs.R
\name{array_extract}
\alias{array_extract}
\title{DuckDB function array_extract}
\arguments{
\item{col0}{\code{T[]}}

\item{col1}{\code{BIGINT}}

\item{string}{\code{VARCHAR}}

\item{index}{\code{BIGINT}}

\item{struct}{\code{STRUCT}}

\item{entry}{\code{VARCHAR}}
}
\value{
\code{T | VARCHAR | ANY}
}
\description{
Extracts a single character from a \code{string} using a (1-based) \code{index}.

Extracts the named \code{entry} from the \code{STRUCT}.

Extracts the entry from an unnamed \code{STRUCT} (tuple) using an index (1-based).
}
\section{Overloads}{

\itemize{
\item \code{array_extract(col0 = `T[]`, col1 = BIGINT)}
\item \code{array_extract(string = VARCHAR, index = BIGINT)}
\item \code{array_extract(struct = STRUCT, entry = VARCHAR)}
\item \code{array_extract(struct = STRUCT, index = BIGINT)}
}
}

\section{SQL examples}{


\if{html}{\out{<div class="sourceCode">}}\preformatted{array_extract('DuckDB', 2)
array_extract(\{'i': 3, 'v2': 3, 'v3': 0\}, 'i')
array_extract(row(42, 84), 1)
}\if{html}{\out{</div>}}
}

