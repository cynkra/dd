% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/duckdb-funs.R
\name{read_csv_auto}
\alias{read_csv_auto}
\title{DuckDB function read_csv_auto}
\arguments{
\item{col0}{\code{VARCHAR | VARCHAR[]}}

\item{hive_types_autocast}{\code{BOOLEAN}}

\item{skip}{\code{BIGINT}}

\item{types}{\code{ANY}}

\item{nullstr}{\code{ANY}}

\item{encoding}{\code{VARCHAR}}

\item{hive_types}{\code{ANY}}

\item{filename}{\code{ANY}}

\item{header}{\code{BOOLEAN}}

\item{delim}{\code{VARCHAR}}

\item{dateformat}{\code{VARCHAR}}

\item{column_names}{\code{VARCHAR[]}}

\item{union_by_name}{\code{BOOLEAN}}

\item{new_line}{\code{VARCHAR}}

\item{escape}{\code{VARCHAR}}

\item{allow_quoted_nulls}{\code{BOOLEAN}}

\item{comment}{\code{VARCHAR}}

\item{hive_partitioning}{\code{BOOLEAN}}

\item{sep}{\code{VARCHAR}}

\item{columns}{\code{ANY}}

\item{rejects_limit}{\code{BIGINT}}

\item{force_not_null}{\code{VARCHAR[]}}

\item{auto_type_candidates}{\code{ANY}}

\item{sample_size}{\code{BIGINT}}

\item{timestampformat}{\code{VARCHAR}}

\item{auto_detect}{\code{BOOLEAN}}

\item{all_varchar}{\code{BOOLEAN}}

\item{store_rejects}{\code{BOOLEAN}}

\item{normalize_names}{\code{BOOLEAN}}

\item{rejects_table}{\code{VARCHAR}}

\item{column_types}{\code{ANY}}

\item{compression}{\code{VARCHAR}}

\item{ignore_errors}{\code{BOOLEAN}}

\item{names}{\code{VARCHAR[]}}

\item{max_line_size}{\code{VARCHAR}}

\item{quote}{\code{VARCHAR}}

\item{maximum_line_size}{\code{VARCHAR}}

\item{rejects_scan}{\code{VARCHAR}}

\item{buffer_size}{\code{UBIGINT}}

\item{decimal_separator}{\code{VARCHAR}}

\item{parallel}{\code{BOOLEAN}}

\item{null_padding}{\code{BOOLEAN}}

\item{dtypes}{\code{ANY}}

\item{strict_mode}{\code{BOOLEAN}}

\item{thousands}{\code{VARCHAR}}

\item{files_to_sniff}{\code{BIGINT}}
}
\value{
Unspecified.
}
\description{
DuckDB function \code{read_csv_auto()}.
}
\section{Overloads}{

\itemize{
\item \code{read_csv_auto(col0 = VARCHAR, hive_types_autocast = BOOLEAN, skip = BIGINT, types = ANY, nullstr = ANY, encoding = VARCHAR, hive_types = ANY, filename = ANY, header = BOOLEAN, delim = VARCHAR, dateformat = VARCHAR, column_names = `VARCHAR[]`, union_by_name = BOOLEAN, new_line = VARCHAR, escape = VARCHAR, allow_quoted_nulls = BOOLEAN, comment = VARCHAR, hive_partitioning = BOOLEAN, sep = VARCHAR, columns = ANY, rejects_limit = BIGINT, force_not_null = `VARCHAR[]`, auto_type_candidates = ANY, sample_size = BIGINT, timestampformat = VARCHAR, auto_detect = BOOLEAN, all_varchar = BOOLEAN, store_rejects = BOOLEAN, normalize_names = BOOLEAN, rejects_table = VARCHAR, column_types = ANY, compression = VARCHAR, ignore_errors = BOOLEAN, names = `VARCHAR[]`, max_line_size = VARCHAR, quote = VARCHAR, maximum_line_size = VARCHAR, rejects_scan = VARCHAR, buffer_size = UBIGINT, decimal_separator = VARCHAR, parallel = BOOLEAN, null_padding = BOOLEAN, dtypes = ANY, strict_mode = BOOLEAN, thousands = VARCHAR, files_to_sniff = BIGINT)}
\item \code{read_csv_auto(col0 = `VARCHAR[]`, files_to_sniff = BIGINT, thousands = VARCHAR, strict_mode = BOOLEAN, dtypes = ANY, null_padding = BOOLEAN, parallel = BOOLEAN, decimal_separator = VARCHAR, buffer_size = UBIGINT, rejects_scan = VARCHAR, maximum_line_size = VARCHAR, quote = VARCHAR, max_line_size = VARCHAR, names = `VARCHAR[]`, ignore_errors = BOOLEAN, compression = VARCHAR, column_types = ANY, rejects_table = VARCHAR, normalize_names = BOOLEAN, store_rejects = BOOLEAN, all_varchar = BOOLEAN, auto_detect = BOOLEAN, timestampformat = VARCHAR, sample_size = BIGINT, auto_type_candidates = ANY, force_not_null = `VARCHAR[]`, rejects_limit = BIGINT, columns = ANY, sep = VARCHAR, hive_partitioning = BOOLEAN, comment = VARCHAR, allow_quoted_nulls = BOOLEAN, escape = VARCHAR, new_line = VARCHAR, union_by_name = BOOLEAN, column_names = `VARCHAR[]`, dateformat = VARCHAR, delim = VARCHAR, header = BOOLEAN, filename = ANY, hive_types = ANY, encoding = VARCHAR, nullstr = ANY, types = ANY, skip = BIGINT, hive_types_autocast = BOOLEAN)}
}
}

