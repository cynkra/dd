% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/duckdb-funs.R
\name{xor}
\alias{xor}
\title{DuckDB function xor}
\arguments{
\item{left}{\code{TINYINT | SMALLINT | INTEGER | BIGINT | HUGEINT | UTINYINT | USMALLINT | UINTEGER | UBIGINT | UHUGEINT | BIT}}

\item{right}{\code{TINYINT | SMALLINT | INTEGER | BIGINT | HUGEINT | UTINYINT | USMALLINT | UINTEGER | UBIGINT | UHUGEINT | BIT}}
}
\value{
\code{TINYINT | SMALLINT | INTEGER | BIGINT | HUGEINT | UTINYINT | USMALLINT | UINTEGER | UBIGINT | UHUGEINT | BIT}
}
\description{
Bitwise XOR.
}
\section{Overloads}{

\itemize{
\item \code{xor(left = TINYINT, right = TINYINT)}
\item \code{xor(left = SMALLINT, right = SMALLINT)}
\item \code{xor(left = INTEGER, right = INTEGER)}
\item \code{xor(left = BIGINT, right = BIGINT)}
\item \code{xor(left = HUGEINT, right = HUGEINT)}
\item \code{xor(left = UTINYINT, right = UTINYINT)}
\item \code{xor(left = USMALLINT, right = USMALLINT)}
\item \code{xor(left = UINTEGER, right = UINTEGER)}
\item \code{xor(left = UBIGINT, right = UBIGINT)}
\item \code{xor(left = UHUGEINT, right = UHUGEINT)}
\item \code{xor(left = BIT, right = BIT)}
}
}

\section{SQL examples}{


\if{html}{\out{<div class="sourceCode">}}\preformatted{xor(17, 5)
}\if{html}{\out{</div>}}
}

